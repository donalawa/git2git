let Conf,configKey,getRemote,pushOnline,throws;_581‍.x([["pushAll",()=>pushAll]]);_581‍.w("conf",[["default",["Conf"],function(v){Conf=v}]]);_581‍.w("./config",[["configKey",["configKey"],function(v){configKey=v}]]);_581‍.w("./utils",[["getRemote",["getRemote"],function(v){getRemote=v}],["pushOnline",["pushOnline"],function(v){pushOnline=v}]]);_581‍.w("assert",[["throws",["throws"],function(v){throws=v}]]);/**
* Description of the file. Add link pointers with {@link link
    name}
    * @author Donacien
    * @date 13/08/2020
    * Contributors : contributor name,
**/


// import Table from 'cli-table3';




const fs = require('fs')
const chalk = require('chalk')
const { readdirSync } = require('fs')
const{ execSync } = require('child_process');

       async function pushAll(args) {
  const config = new Conf().get(configKey);

  const localPath = config.local;
  const onlinePath = config.online;

  let projects = [];

  let source = localPath;

  const getDirectories = source =>
  readdirSync(source, { withFileTypes: true })
    .filter(dirent => dirent.isDirectory())
    .map(dirent => dirent.name)

  projects = getDirectories(source);
  for(let i = 0; i < projects.length; i++) {
      let Pname = projects[i];
      let commitMessage = 'Updated';
      let branch = ''
      if(args._[1] !== undefined) {
        commitMessage = args._[1];
      }
      let remote = getRemote(localPath,Pname);

      let getB = execSync('git branch', {
        cwd: `${localPath}/${Pname}`, 
      })

      let allbranches = getB.toString().split('');
      let start = allbranches.indexOf('*');
      let temp = [];
      for(let i = start + 2; i < allbranches.length; i++) {
        if(allbranches[i] === "\n") {
          break
        }

        temp.push(allbranches[i]);
      }
      branch = temp.join('');
     
      pushOnline(onlinePath,Pname,remote,branch,commitMessage);
  }
  _581‍.g.console.log(chalk.blueBright(`Done All Pushed Successfully`))
}
